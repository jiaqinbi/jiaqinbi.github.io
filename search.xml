<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SSM整合解析</title>
      <link href="/2019/06/28/Analysis%20of%20SSM%20Integration/"/>
      <url>/2019/06/28/Analysis%20of%20SSM%20Integration/</url>
      
        <content type="html"><![CDATA[<h2 id="SSM整合解析"><a href="#SSM整合解析" class="headerlink" title="SSM整合解析"></a>SSM整合解析</h2><p>注：Spring、Springmvc框架搭建省略。</p><h3 id="一、Spring整合Springmvc"><a href="#一、Spring整合Springmvc" class="headerlink" title="一、Spring整合Springmvc"></a>一、Spring整合Springmvc</h3><h4 id="1、目的"><a href="#1、目的" class="headerlink" title="1、目的"></a>1、目的</h4><p>​           启动Tomcat本地服务器的时候加载spring的配置文件，在controller中能成功调用service对象中的方法。</p><h4 id="2、对象及原理讲解"><a href="#2、对象及原理讲解" class="headerlink" title="2、对象及原理讲解"></a>2、对象及原理讲解</h4><p>​        ServletContext域对象，只会创建一次，服务器启动时创建，服务器关闭时销毁，生命周期为项目运行阶段；</p><p>​        监听器对象，用作监听ServletContext域对象的创建和销毁，执行一次，服务器启动时执行；</p><p>​            监听器去加载spring的配置文件，创建WEB版本工厂，存储ServletContext对象。</p><h4 id="3、整合"><a href="#3、整合" class="headerlink" title="3、整合"></a>3、整合</h4><p>​        在web.xml中配置ContextLoaderListene监听器，代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listenerclass</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置加载类路径的配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​                在控制器类中做自动类型注入“@Autowired”，调用service业务层的方法做单元测试即可。</p><h3 id="二、Spring整合MyBatis框架"><a href="#二、Spring整合MyBatis框架" class="headerlink" title="二、Spring整合MyBatis框架"></a>二、Spring整合MyBatis框架</h3><h4 id="1、MyBatis环境搭建"><a href="#1、MyBatis环境搭建" class="headerlink" title="1、MyBatis环境搭建"></a>1、MyBatis环境搭建</h4><h5 id="1-1-配置文件编写（SqlMapConfig-xml）"><a href="#1-1-配置文件编写（SqlMapConfig-xml）" class="headerlink" title="1.1 配置文件编写（SqlMapConfig.xml）"></a>1.1 配置文件编写（SqlMapConfig.xml）</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 声明 --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/ssm"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用的是注解 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 该包下所有的dao接口都可以使用，如下所示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"cn.njut.dao"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-2测试编写"><a href="#1-2测试编写" class="headerlink" title="1.2测试编写"></a>1.2测试编写</h5><p>​        首先在接口类的方法中添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from 表名"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>​        然后编写测试方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载sql配置文件</span></span><br><span class="line">InputStream inputStream = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line"><span class="comment">// 创建会话工厂</span></span><br><span class="line">SqlSessionFactory factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line"><span class="comment">// 创建sqlSession对象</span></span><br><span class="line">SqlSession session = factory.openSession();</span><br><span class="line"><span class="comment">// 获取代理对象</span></span><br><span class="line">AccountDao dao = session.getMapper(AccountDao.class);</span><br><span class="line"><span class="comment">// 调用接口类中实现的查询方法</span></span><br><span class="line">List&lt;Account&gt; list = dao.findAll();</span><br><span class="line"><span class="keyword">for</span> (Account account : list) &#123;</span><br><span class="line">System.out.println(account);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 关闭</span></span><br><span class="line">session.close();</span><br><span class="line">inputStream.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">/////////////////注意在编写“增删改”三个方法的时候需要进行事物提交//////////////////////</span></span><br><span class="line"><span class="comment">/////////////////////////////如session.commit();///////////////////////////////////</span></span><br></pre></td></tr></table></figure><h4 id="2、整合"><a href="#2、整合" class="headerlink" title="2、整合"></a>2、整合</h4><p>​            注：Spring整合MyBatis会放弃对SqlMapConfig.xml的使用，而是在Spring配置文件中配置原                      SqlMapConfig中的内容。</p><h5 id="2-1配置文件的编写（applicationContext-xml）"><a href="#2-1配置文件的编写（applicationContext-xml）" class="headerlink" title="2.1配置文件的编写（applicationContext.xml）"></a>2.1配置文件的编写（applicationContext.xml）</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置C3P0的连接池对象 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DriverManagerDataSource"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/ssm"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置SqlSession的工厂 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置扫描dao的包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"mapperScanner"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"cn.njut.dao"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-2查询测试的编写"><a href="#2-2查询测试的编写" class="headerlink" title="2.2查询测试的编写"></a>2.2查询测试的编写</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查询所有的数据</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">List&lt;Account&gt; list = accoutService.findAll();</span><br><span class="line"><span class="keyword">for</span> (Account account : list) &#123;<span class="comment">//增强型for循环打印查询到的数据库内容</span></span><br><span class="line">System.out.println(account);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> Spring </tag>
            
            <tag> Springmvc </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap简单学习</title>
      <link href="/2019/06/16/Bootstrap%20Simple-Learning/"/>
      <url>/2019/06/16/Bootstrap%20Simple-Learning/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Bootstrap简介"><a href="#一、Bootstrap简介" class="headerlink" title="一、Bootstrap简介"></a>一、Bootstrap简介</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a><strong>1.概念</strong></h3><p>​        介绍：bootstrap是一个前端开发的框架，无需自己编写大量繁琐的css代码就可快速制作出非常美观的页               面，开发人员进行基于bootstrap二次开发即可。</p><p>​        优点：</p><p>​            1.定义了很多css样式表和js插件。</p><p>​            2.响应式布局(会根据页面分辨率不同自动调整页面大小)。</p><h3 id="2-快速入门"><a href="#2-快速入门" class="headerlink" title="2.快速入门"></a><strong>2.快速入门</strong></h3><p>​        <a href="https://www.bootcss.com/" target="_blank" rel="noopener">Bootstrap首页</a>  <a href="https://github.com/twbs/bootstrap/releases/download/v3.3.7/bootstrap-3.3.7-dist.zip" target="_blank" rel="noopener">Bootstrap下载</a></p><p>​        1.下载bootstrap</p><p>​        2.引入bootstrap到项目中(js  css  font  )</p><p>​        3.搭配jquery使用</p><p>​        4.具体效果见项目</p><h2 id="二、响应式布局"><a href="#二、响应式布局" class="headerlink" title="二、响应式布局"></a>二、响应式布局</h2><h3 id="栅格系统的实现"><a href="#栅格系统的实现" class="headerlink" title="栅格系统的实现"></a><a href="https://v3.bootcss.com/css/#grid" target="_blank" rel="noopener">栅格系统的实现</a></h3><p>​            1.定义容器。相当于table</p><p>​                容器分类：</p><p>​                    1.container：两边留白</p><p>​                    2.container-fluid：，每种页面都是100%的宽度                    </p><p>​            2.定义行，相当于tr。格式：row</p><p>​            3.定义元素，指定元素在不同设备上所占的格子数目。样式：col-设备代号-格子数目</p><p>​            4.设备代号：</p><p>​                <strong>超小屏幕</strong> 手机 (&lt;768px)  –xs</p><p>​                <strong>小屏幕</strong> 平板 (≥768px) –sm</p><p>​                <strong>中等屏幕</strong> 桌面显示器 (≥992px)  –md</p><p>​                <strong>大屏幕</strong> 大桌面显示器 (≥1200px)  –lg</p><p>​            5.注意：</p><p>​                1.一行中如果格子数目超过12，则超出部分自动换行。</p><p>​                2.栅格类属性可以向上兼容。</p><p>​                3.如果真实设备宽度小于了设置栅格类属性的设备代码的最小值，会一个元素沾满一整行。</p><h2 id="三、Css样式和Js插件"><a href="#三、Css样式和Js插件" class="headerlink" title="三、Css样式和Js插件"></a>三、Css样式和Js插件</h2><h3 id="1-全局css样式"><a href="#1-全局css样式" class="headerlink" title="1.全局css样式"></a>1.全局css样式</h3><p>​            按钮：class=”btn btn-default”</p><p>​                图片 ：class=”img-responsive” –图片百分百</p><p>​                     img-circle  –圆形</p><p>​                     img-rounded  –矩形</p><p>​                     img-thumbnail  –相框</p><p>​            表单 ：详见bootstrap官网css全局样式标签片段</p><p>​            表格 ：详见bootstrap官网css全局样式标签片段</p><h3 id="2-组件"><a href="#2-组件" class="headerlink" title="2.组件"></a>2.组件</h3><p>​        导航与分页 ：详见bootstrap官网c组件标签片段</p><h3 id="3-插件"><a href="#3-插件" class="headerlink" title="3.插件"></a>3.插件</h3><p>​        轮播图 ：详见bootstrap官网轮播图标签片段</p>]]></content>
      
      
      <categories>
          
          <category> bootstrap </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bootstrap </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建心得</title>
      <link href="/2019/05/26/Experience%20of%20Blog%20Building/"/>
      <url>/2019/05/26/Experience%20of%20Blog%20Building/</url>
      
        <content type="html"><![CDATA[<p><br><!--<img src="../image/description-markdown基本语法.jpg" alt="" style="width: 100%;"/> --><br><a id="more"></a></p><hr><h2 id="一、写在前面"><a href="#一、写在前面" class="headerlink" title="一、写在前面"></a>一、写在前面</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本站使用的主题是基于<font style="color:red;">Hexo Next</font>二次开发而成的。虽然搭建耗时较短，但由于不太熟悉其模板文件导致二次开发需要持续进行下去。<br>博主本人具有一定的js和css的基础，所以可以选择性抛弃其原有的一些样式而使用自己编写的样式和动画美化页面，个性化设置会一直进行下去，后期可能的话也会像其他博主一样更新美化教程。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于博主本人是第一次使用Markdown语法发布文章，对其用法还不太熟悉，所以此篇文章包括之前的一篇文章在格式排版上面都表现<br>得不是很好太美观。这一点怎么说呢……嗯…估计有点不符合编程人员的要求吧<font style="color:#869194;font-size:10pt;">(PS:写了几年代码很少发过技术贴，但是博主已经深刻意识到这一点，后面会一定会做出改变!)</font>。</p><h2 id="二、搭建过程概述"><a href="#二、搭建过程概述" class="headerlink" title="二、搭建过程概述"></a>二、搭建过程概述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1). 环境要求: Node.js + Git管理工具 + IntelliJ IDEA + Hexo主题 + github代码社区<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(2). 软件下载: Node.js下载地址: <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a>，下载后安装全部默认即可。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; git下载地址: <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a>，根据自己电脑下载对应版本，安装全部默认即可。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   idea下载地址: <a href="https://www.jetbrains.com/idea/download/#section=windows" target="_blank" rel="noopener">https://www.jetbrains.com/idea/download/#section=windows</a>，下载免费版本或者百度搜索破解版。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Hexo主题下载地址: <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a>，挑选自己喜欢主题在Git终端中克隆即可。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; github地址: <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>，注册账号并创建仓库。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font style="color:red;font-size:10pt;">注: 具体安装细节网上有详细教程，另附我参考得网址<a href="http://www.youmeek.com/" target="_blank" rel="noopener">http://www.youmeek.com/</a>。</font><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(3). 工具设置: 博客主题源更换以及美化编辑器都是idea，不得不说idea的确是一个非常强大的工具，此间为了方便博客的发布，特地将<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;idea终端从默认的cmd转向了git，极大的方便了本地测试和发布。终端修改步骤为:File–&gt;Setting–&gt;Tools–&gt;Terminal，然后<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在安装位置选择git bash.exe即可。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(4). 主题美化: 博客主题一般都是直接克隆的Hexo主题，我是用的Hexo Next主题。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般修改和美化的几个主要地方如下:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1、主目录下的_config.yml以及主题目录下的_config.yml；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2、主题下的layout目录下的swig文件，有些主题时ejs文件；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3、主题下的css文件夹—&gt;_custom文件夹下的custom.styl文件；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4、主题下的js文件夹下的文件；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(5). 常用命令: 一般修改之后发布需遵循 hexo clean  –&gt;  hexo generate –&gt;  hexo deploy 三步；若只是简单的美化和发布文章在本地<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;测试只需输入 hexo server 命令；若配置文件修改了在本地测试同样需要输入发布的前两个命令。</p><h2 id="三、文章发布"><a href="#三、文章发布" class="headerlink" title="三、文章发布"></a>三、文章发布</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1). md文件编辑器配置: 在idea中插件中搜索<font style="color:red;">Markdown Navigator</font>安装重启即可。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(2). Markdown语法: 语法参考 <a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">https://www.jianshu.com/p/191d1e21f7ed</a>。</p><h2 id="四、写在最后"><a href="#四、写在最后" class="headerlink" title="四、写在最后"></a>四、写在最后</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实之前搭建过一次博客，并且自己也有编程基础，所以途中并没有遇到什么特别大的过不去的坎，也感谢那些帮我解决问题的人，另<br>外特别感谢我师傅，丰富的经验让我很是膜拜！！！<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后续会不断完善此博客，也会陆续更新帖子，励志成为一个技术大牛<font style="color:#869194;font-size:10pt;">(PS:梦想还是要有的!)</font>。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;附上一位感觉特别厉害的博主<a href="https://io-oi.me/" target="_blank" rel="noopener">reuixiy</a>，里面有一篇“打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化”的博客详细介绍了所有步骤，值得深入学习。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（起始篇）--记录一下博客正式使用日</title>
      <link href="/2019/05/24/start-blog/"/>
      <url>/2019/05/24/start-blog/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到毕家钦的博客！此篇文章发布得益于博主<a href="http://www.youmeek.com/" target="_blank" rel="noopener">YouMeek</a>的帮助，详细博客搭建教程请查看<a href="http://www.youmeek.com/hexo-install/" target="_blank" rel="noopener">Youmeek博客搭建</a>。</p><a id="more"></a><hr><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;五六月份对于大四学生来说正是毕业季！旅游、聚会、上班、毕设便成了我们的几个核心点。五月中下旬毕设全部工作结束后，因为不想成为一条咸鱼而选择开始学习研究生阶段需要用到的知识技能。同时也选择自己搭建了一个个人博客，用于记录……其实此前自己也搭建过一次个人博客，但是并没有记录什么内容，因此本次选择了重新搭建。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
